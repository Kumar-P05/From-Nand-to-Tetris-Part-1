// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:


    // It follows same logic as RAM512. So see RAM512 and its associated files comments.


    DMux8Way(in = load, sel = address[9..11], a = RL1, b = RL2, c = RL3, d = RL4, e = RL5, f = RL6, g = RL7, h = RL8);


    RAM512(in = in, load = RL1, address = address[0..8], out = R1);

    RAM512(in = in, load = RL2, address = address[0..8], out = R2);

    RAM512(in = in, load = RL3, address = address[0..8], out = R3);

    RAM512(in = in, load = RL4, address = address[0..8], out = R4);

    RAM512(in = in, load = RL5, address = address[0..8], out = R5);

    RAM512(in = in, load = RL6, address = address[0..8], out = R6);

    RAM512(in = in, load = RL7, address = address[0..8], out = R7);

    RAM512(in = in, load = RL8, address = address[0..8], out = R8);


    Mux8Way16(a = R1, b = R2, c = R3, d = R4, e = R5, f = R6, g = R7, h = R8, sel = address[9..11], out = out);




}